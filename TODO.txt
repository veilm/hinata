- rust rewrite
- recompute summaries
- make a `memory` CLI or something
	for now it can just have some different profiles (simple .md files)
	
	then you just have a `memory append PROFILE TEXT` and `memory compress` and
	`memory read PROFILE`
	or something
	
	or hnt-memory
	
	
	
	then maybe your main memory profile entry can say "read the MAIN-SUBTOPIC
	profile entry to learn more" or something
	and then you append/compress it separately
	
	or maybe a compress just means splitting it out to a different file
	
	ideally the main append  could be very easy to type, so hnt-agent
	can make a memory append once per turn at the start
- make an alternate output format for hnt-edit
	it will make a copy of all input files and then analyze the diff
	and just kind of write a git diff between all the files
	
	should probably be shorter in general
- make it so hnt-shell has a max amount of tokens it can give
	then it logs the whole message to like /tmp/hnt-shell-1750571344.log
	so the LLM can read it if it really wants

- I think based Gemini nuked my idea for the hnt-user escaping in hnt-llm etc.
	so at least then make the main parser flexible
	
	like
	echo "hello !??? < eof>" | hnt-llm
	etc.
	shouldn't break

- make some way to continue a hnt-agent conversation
	even if headlesh has to get reset, no big deal
- maybe always include a <pwd>
	in each user turn, just for good reference
	
	idk right now it's fairly often it forgets
	but maybe we should just be more explicit on cds
	
	like by default no pwd mention, except for the start
	but if we ever detect that pwd changes, then we do
	<pwd>
	<before>foo</before>
	<after>bar</before>
	</pwd>
	or something

- fix degraded performance? 1751510431
	like util/commit worked better on commit 29e7717621de2467e4ab688008a2a7914e1b0b29
	on average
	
	this might be some subtle ordering or prompting or maybe the /etc/os-release
	thing actually helped a lot
	
	see if you can get a general prompt that helps
	
	1751543183 okay the specific util/commit was using the wrong env but keep
	testing for overall perf
